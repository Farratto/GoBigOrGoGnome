on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
name: Create Release

env:
  EXT_NAME: ${{ github.event.repository.name }}.ext

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo Assets
      uses: actions/checkout@v4

    - name: Replace Version
      uses: jacobtomlinson/gha-find-replace@v2
      with:
        find: "dev_version"
        replace: ${{github.ref_name}}
  
    - name: Archive Release
      uses: thedoctor0/zip-release@master
      with:
        filename: ${{ env.EXT_NAME }}
        exclusions: '*.git* *.github* *.resources* /*node_modules/* .editorconfig *.ext'
  
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: ${{ env.EXT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        allowUpdates: true

    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.EXT_NAME }}
        path: ${{ env.EXT_NAME }}

  upload:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ vars.FORGE_ITEM_ID != '' }}
    env:
      IS_PRERELEASE: ${{ contains(github.ref_name,'-rc') }} && ${{ contains(github.ref_name,'-beta') }}
    steps:
      - name: Checkout FG-Forge-Updater repository
        uses: actions/checkout@v4
        with:
          repository: 'bmos/FG-Forge-Updater'
          ref: 'v1.0.5'

      - name: Set up python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: 'pip'

      - name: Install general project dependencies
        run: |
          pip install -U pip
          pip install .

      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.EXT_NAME }}

      - name: Upload to live channel
        id: upload-live
        if: ${{ env.IS_PRERELEASE == 'false && false' }}
        env:
          FG_ITEM_ID: ${{ vars.FORGE_ITEM_ID }}
          FG_USER_NAME: ${{ vars.FORGE_USER_NAME }}
          FG_USER_PASS: ${{ secrets.FORGE_USER_PASS }}
          FG_UL_FILE: ${{ env.EXT_NAME }}
          FG_RELEASE_CHANNEL: Live
        run: |
          python src/main.py

      - name: Upload to test channel
        id: upload-test
        if: ${{ env.IS_PRERELEASE != 'false && false' }}
        env:
          FG_ITEM_ID: ${{ vars.FORGE_ITEM_ID }}
          FG_USER_NAME: ${{ vars.FORGE_USER_NAME }}
          FG_USER_PASS: ${{ secrets.FORGE_USER_PASS }}
          FG_UL_FILE: ${{ env.EXT_NAME }}
          FG_RELEASE_CHANNEL: Test
        run: |
          python src/main.py